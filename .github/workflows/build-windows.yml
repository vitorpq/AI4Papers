name: Build Windows EXE

on:
  push:
    branches: [ "main" ]
    tags: [ "v*", "V*" ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      # Instala os browsers do Playwright DENTRO do pacote Python,
      # permitindo que o PyInstaller embale tudo junto.
      PLAYWRIGHT_BROWSERS_PATH: "0"
      PYTHONUTF8: "1"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Playwright browsers (Chromium)
      run: |
        python -m playwright install chromium

    - name: Verify playwright drivers
      run: |
        python - << "PY"
        import os, sys, playwright
        from pathlib import Path
        print("Playwright version:", playwright.__version__)
        # Mostra onde os navegadores foram instalados (deverá ser site-packages/playwright/driver/)
        import importlib.util
        spec = importlib.util.find_spec("playwright")
        print("Playwright location:", spec.origin)
        PY

    - name: Build with PyInstaller (onedir)
      run: |
        pyinstaller --noconfirm ^
          --windowed ^
          --name "PDFDownloader" ^
          --collect-all playwright ^
          app.py

    - name: Create ZIP artifact
      run: |
        powershell Compress-Archive -Path "dist/PDFDownloader/*" -DestinationPath "PDFDownloader_windows.zip" -Force

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PDFDownloader_windows
        path: PDFDownloader_windows.zip
        if-no-files-found: error

  # (Opcional) Cria Release automaticamente quando você marca uma tag "v*"
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: PDFDownloader_windows
        path: .
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          PDFDownloader_windows.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}