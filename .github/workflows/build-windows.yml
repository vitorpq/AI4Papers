name: Build Windows EXE

on:
  push:
    branches: [ "main" ]
    tags: [ "v*", "V*" ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      PLAYWRIGHT_BROWSERS_PATH: "0"   # embala Chromium dentro do app
      PYTHONUTF8: "1"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Playwright browsers (Chromium)
      run: python -m playwright install chromium

    - name: Verify Playwright install
      run: |
        python -c "import playwright, importlib.util; \
        print('Playwright version:', getattr(playwright, '__version__', 'unknown')); \
        spec = importlib.util.find_spec('playwright'); \
        print('Playwright location:', spec.origin)"

    - name: Build with PyInstaller (onedir)
      run: pyinstaller --noconfirm --windowed --name PDFDownloader --collect-all playwright app.py

    - name: Create ZIP artifact
      run: |
        if (Test-Path "PDFDownloader_windows.zip") { Remove-Item "PDFDownloader_windows.zip" -Force }
        Compress-Archive -Path "dist/PDFDownloader/*" -DestinationPath "PDFDownloader_windows.zip" -Force

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PDFDownloader_windows
        path: PDFDownloader_windows.zip
        if-no-files-found: error

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build-windows]
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: PDFDownloader_windows
        path: .
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          PDFDownloader_windows.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}